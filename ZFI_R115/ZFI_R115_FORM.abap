*&---------------------------------------------------------------------*
*&  Include           ZFI_R115_FORM
*&---------------------------------------------------------------------*

*&---------------------------------------------------------------------*
*&      Form  PERYR_SH
*&---------------------------------------------------------------------*
FORM PERYR_SH .

  SELECT PERYR, PERYT
    INTO TABLE @DATA(LT_PERYR_SH)
    FROM T7PIQYEART
    WHERE SPRAS EQ 'T'.

  CALL FUNCTION 'F4IF_INT_TABLE_VALUE_REQUEST'
    EXPORTING
      RETFIELD    = 'PERYR'
      DYNPPROG    = SY-CPROG
      DYNPNR      = SY-DYNNR
      DYNPROFIELD = 'S_KAYIT'
      VALUE_ORG   = 'S'
    TABLES
      VALUE_TAB   = LT_PERYR_SH.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  STUNO_SH
*&---------------------------------------------------------------------*
FORM STUNO_SH.

  DATA : LT_RETURN_TAB TYPE STANDARD TABLE OF DDSHRETVAL WITH HEADER LINE,
         LS_RETURN_TAB LIKE LINE OF LT_RETURN_TAB.


  CALL FUNCTION 'F4IF_FIELD_VALUE_REQUEST'
    EXPORTING
      TABNAME           = 'PIQST00'
      FIELDNAME         = 'STUDENT12'
      SEARCHHELP        = 'HRPIQ00STUDENT'
      SHLPPARAM         = 'SHORT'
    TABLES
      RETURN_TAB        = LT_RETURN_TAB
    EXCEPTIONS
      FIELD_NOT_FOUND   = 1
      NO_HELP_FOR_FIELD = 2
      INCONSISTENT_HELP = 3
      NO_VALUES_FOUND   = 4
      OTHERS            = 5.
  IF SY-SUBRC <> 0.
* Implement suitable error handling here
  ENDIF.

  S_STNO-LOW = LT_RETURN_TAB-FIELDVAL.

ENDFORM.

*&---------------------------------------------------------------------*
*&      Form  FAKULTY_SH
*&---------------------------------------------------------------------*
FORM FAKULTY_SH.

  SELECT FACULTY_ID, FACULTY_CODE, FACULTY_NAME
    INTO TABLE @DATA(LT_FAK_SH)
    FROM ZSM_STDNT_SEARCH
    WHERE PROGRAM_TYPE IN ( 'ZYL' , 'ZDR' ).

  SORT LT_FAK_SH BY FACULTY_ID.
  DELETE ADJACENT DUPLICATES FROM LT_FAK_SH COMPARING FACULTY_ID.

  CALL FUNCTION 'F4IF_INT_TABLE_VALUE_REQUEST'
    EXPORTING
      RETFIELD    = 'PERYR'
      DYNPPROG    = SY-CPROG
      DYNPNR      = SY-DYNNR
      DYNPROFIELD = 'S_KAYIT'
      VALUE_ORG   = 'S'
    TABLES
      VALUE_TAB   = LT_FAK_SH.

ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  GET_DATA
*&---------------------------------------------------------------------*
FORM GET_DATA.

  DATA : LV_TCNO TYPE PRDNI.

  " öðrencileri çektik
  SELECT STUDENT_STOBJID, STUDENT_NO,   FACULTY_CODE,     FACULTY_NAME, KAYIT_YILI,       KAYIT_DONEM,
         AYRIL_YIL,       PROGRAM_TYPE, PROGRAM_TYPE_TXT, KAYIT_TURU,   KAYIT_TURU_TANIM, PROGRAM_ID , PROGRAM_NAME
    FROM ZSM_STDNT_SEARCH
    INTO TABLE @DATA(LT_STUDENT)
    WHERE PROGRAM_TYPE IN ( 'ZDR' , 'ZYL' )
      AND KAYIT_YILI   IN @S_KAYIT
      AND KAYIT_DONEM  IN @S_KAYDN
      AND STUDENT_NO   IN @S_STNO
      AND FACULTY_CODE IN @S_FAK.

  " TEZLI TEZSIZ GECÝS SÝLÝNDÝ
  DELETE LT_STUDENT WHERE KAYIT_TURU EQ 31.

  LOOP AT LT_STUDENT INTO DATA(LS_STUDENT).

    DATA : LV_PAYU_ODEME         TYPE BETRW_KK,
           LV_PAYU_ODEME_WAERS   TYPE WAERS,
           LV_HAVALE_ODEME       TYPE BETRW_KK,
           LV_HAVALE_ODEME_WAERS TYPE WAERS,
           LV_MAIL_ODEME         TYPE BETRW_KK,
           LV_MAIL_ODEME_WAERS   TYPE WAERS,
           LV_CEK_ODEME          TYPE BETRW_KK,
           LV_CEK_ODEME_WAERS    TYPE WAERS,
           LV_KREDI_ODEME        TYPE BETRW_KK,
           LV_KREDI_ODEME_WAERS  TYPE WAERS,
           LV_IKINCI_ODEME       TYPE BETRW_KK,
           LV_IKINCI_ODEME_WAERS TYPE WAERS,
           LV_SENET_ODEME        TYPE BETRW_KK,
           LV_SENET_ODEME_WAERS  TYPE WAERS.

    CLEAR : LV_PAYU_ODEME,  LV_PAYU_ODEME_WAERS,  LV_HAVALE_ODEME, LV_HAVALE_ODEME_WAERS,
            LV_MAIL_ODEME,  LV_MAIL_ODEME_WAERS,  LV_CEK_ODEME,    LV_CEK_ODEME_WAERS,
            LV_KREDI_ODEME, LV_KREDI_ODEME_WAERS, LV_SENET_ODEME,  LV_SENET_ODEME_WAERS.

    GS_DATA-STUDENT12        = LS_STUDENT-STUDENT_NO.
    GS_DATA-FACULTY_CODE     = LS_STUDENT-FACULTY_CODE.
    GS_DATA-FACULTY_NAME     = LS_STUDENT-FACULTY_NAME.
    GS_DATA-KAYIT_YILI       = LS_STUDENT-KAYIT_YILI.
    GS_DATA-KAYIT_DONEM      = LS_STUDENT-KAYIT_DONEM.
    GS_DATA-PROGRAM_ID       = LS_STUDENT-PROGRAM_ID.
    GS_DATA-PROGRAM_NAME     = LS_STUDENT-PROGRAM_NAME.
    CONCATENATE LS_STUDENT-KAYIT_YILI+2(2) LS_STUDENT-KAYIT_DONEM+2(1) INTO GS_DATA-GIRIS_PERSL SEPARATED BY '-'.
    GS_DATA-AYRIL_YIL        = LS_STUDENT-AYRIL_YIL.
    GS_DATA-PROGRAM_TYPE     = LS_STUDENT-PROGRAM_TYPE.
    GS_DATA-PROGRAM_TYPE_TXT = LS_STUDENT-PROGRAM_TYPE_TXT.
    GS_DATA-KAYIT_TURU       = LS_STUDENT-KAYIT_TURU.
    GS_DATA-KAYIT_TURU_TANIM = LS_STUDENT-KAYIT_TURU_TANIM.

    " ücret hesaplama verisini döneme göre alýyoruz
    SELECT DOCNR, PARTNER, PERSL, FEECALCMODE, DOCAMT, DOCCUKY, CMSTNUM, CMSTCAT
      FROM CMACDB_FEEHD
      INTO TABLE @DATA(LT_CMAC)
      WHERE CMSTID    EQ @LS_STUDENT-STUDENT_STOBJID
        AND PERSL     EQ @GS_DATA-GIRIS_PERSL.

    SORT LT_CMAC BY PARTNER ASCENDING DOCNR DESCENDING.
    DELETE ADJACENT DUPLICATES FROM LT_CMAC COMPARING PARTNER.

    READ TABLE LT_CMAC INTO DATA(LS_CMAC) INDEX 1.
    IF SY-SUBRC EQ 0.
      GS_DATA-UCRETHESAPLAMA = LS_CMAC-DOCAMT.
      GS_DATA-UH_PB = LS_CMAC-DOCCUKY.
      GS_DATA-CMSTCAT      = LS_CMAC-CMSTCAT.
      GS_DATA-PARTNER      = LS_CMAC-PARTNER.
      GS_DATA-TOPLAM_UCRET = LS_CMAC-DOCAMT.
      GS_DATA-TU_WAERS     = LS_CMAC-DOCCUKY.
    ENDIF.
    CLEAR : LT_CMAC, LS_CMAC.
    " end of ücret hesaplama
*&=====================================================================*
    " ÝLK KAYIT ÝÇÝN STR VE TABLE
    DATA : LT_PESIN_ERKEN TYPE TABLE OF LTY_PESIN_ERKEN,
           LS_PESIN_ERKEN LIKE LINE  OF LT_PESIN_ERKEN.
    CLEAR : LT_PESIN_ERKEN, LS_PESIN_ERKEN.
*&=====================================================================*
*    DATA : LV_PAYU_TAKSIT(1), LV_PAYU_ERKEN(1).
    " payu ödemeleri
*    DATA : LT_PAYU TYPE TABLE OF LTY_PAYU.
    CLEAR LT_PAYU.
    SELECT STOBJID, STUDENT_NO, AMOUNT, WAERS, PERSL, KAYIT_TIPI, PESINTAKSIT, INDIRIM_TUR, UDATE, UZEIT
      FROM ZCAT_PAYU_LOG
      INTO CORRESPONDING FIELDS OF TABLE @LT_PAYU
      WHERE KAYIT_TIPI IN ( 6, 7 )
        AND PERSL      EQ @GS_DATA-GIRIS_PERSL
        AND STUDENT_NO EQ @GS_DATA-STUDENT12
        AND PROGRAMID  EQ @GS_DATA-PROGRAM_ID
        AND DURUM      EQ 'B'.

    IF LT_PAYU IS NOT INITIAL.

      SORT LT_PAYU BY STUDENT_NO ASCENDING UDATE ASCENDING UZEIT ASCENDING.

      PERFORM PAYU
             USING GS_DATA-TOPLAM_UCRET
                   GS_DATA-TU_WAERS
                   LT_PAYU
          CHANGING LV_PAYU_ODEME
                   LV_PAYU_ODEME_WAERS.

      READ TABLE LT_PAYU INTO DATA(LS_PAYU) INDEX 1.
      IF SY-SUBRC EQ 0.
        LS_PESIN_ERKEN-DATUM        = LS_PAYU-UDATE.
        LS_PESIN_ERKEN-UZEIT        = LS_PAYU-UZEIT.
        LS_PESIN_ERKEN-ERKEN_NORMAL = LS_PAYU-INDIRIM_TUR.
        LS_PESIN_ERKEN-TAKSIT_PESIN = LS_PAYU-PESINTAKSIT.

        APPEND LS_PESIN_ERKEN TO LT_PESIN_ERKEN.
        CLEAR LS_PESIN_ERKEN.
      ENDIF.
    ENDIF.
    CLEAR : LT_PAYU.
*&=====================================================================*

*&=====================================================================*
    " havale
*    DATA : LV_HAVALE_TAKSIT(1), LV_HAVALE_ERKEN(1).
    SELECT GPART, PERSL, FEECALCMODE, PESINTAKSIT, TUR,   BETRW,
           WAERS, SILME, PROGRAMID,   OPBEL,       DATUM, UZEIT
      FROM ZCAT_HAVALE_GRS
      INTO TABLE @DATA(LT_HAVALE)
      WHERE GPART     EQ @GS_DATA-PARTNER
        AND PERSL     EQ @GS_DATA-GIRIS_PERSL
        AND PROGRAMID EQ @GS_DATA-PROGRAM_ID
        AND SILME     NE 'X'.

    IF LT_HAVALE IS NOT INITIAL.
      DELETE LT_HAVALE WHERE OPBEL = ''.
      DELETE LT_HAVALE WHERE SILME = 'X'.

      SORT LT_HAVALE BY GPART ASCENDING DATUM ASCENDING UZEIT ASCENDING.

*      LOOP AT LT_HAVALE INTO DATA(LS_HAVALE).
*        LV_HAVALE_ODEME       = LV_HAVALE_ODEME + LS_HAVALE-BETRW.
*        LV_HAVALE_ODEME_WAERS = LS_HAVALE-WAERS.
*      ENDLOOP.
*      CLEAR LS_HAVALE.

      PERFORM HAVALE
           USING GS_DATA-TOPLAM_UCRET
                 GS_DATA-TU_WAERS
                 LT_HAVALE
        CHANGING LV_HAVALE_ODEME
                 LV_HAVALE_ODEME_WAERS.

      READ TABLE LT_HAVALE INTO DATA(LS_HAVALE) INDEX 1.
      IF SY-SUBRC EQ 0.
        LS_PESIN_ERKEN-DATUM        = LS_HAVALE-DATUM.
        LS_PESIN_ERKEN-UZEIT        = LS_HAVALE-UZEIT.
        LS_PESIN_ERKEN-ERKEN_NORMAL = LS_HAVALE-TUR.
        LS_PESIN_ERKEN-TAKSIT_PESIN = LS_HAVALE-PESINTAKSIT.

        APPEND LS_PESIN_ERKEN TO LT_PESIN_ERKEN.
        CLEAR LS_PESIN_ERKEN.
*        CLEAR : LV_HAVALE_TAKSIT, LV_HAVALE_ERKEN.
*        LV_HAVALE_TAKSIT = LS_HAVALE-PESINTAKSIT.
*        LV_HAVALE_ERKEN  = LS_HAVALE-TUR.
      ENDIF.
    ENDIF.
    CLEAR : LT_HAVALE.
*&=====================================================================*

*&=====================================================================*
    " tahsilat_head ile genel ödeme verilerini alýyoruz
*    DATA : LV_HEAD_TAKSIT(1), LV_HEAD_ERKEN(1).
    " -||- SENET -- MAIL ORDER -- CEK -||-
    SELECT THSLTNO, OGRNO,       DONEM, GTUTAR,        PBIRIM,   PROGRAMID, DOCNO,
           KIP,     PESINTAKSIT, TUR,   PROGRAM_TUTAR, KAYITTRH, KAYITSAAT, MUHASEBE
      FROM ZCAT_THSLT_HEAD
      INTO TABLE @DATA(LT_HEAD)
      WHERE MUHASEBE EQ 'X'
        AND KIP      IN ( 6,7 )
        AND DONEM    EQ @GS_DATA-GIRIS_PERSL
        AND OGRNO    EQ @GS_DATA-STUDENT12
        AND PROGRAMID  EQ @GS_DATA-PROGRAM_ID.

    IF LT_HEAD IS NOT INITIAL.
      DELETE LT_HEAD WHERE DOCNO EQ ''.
*&=====================================================================*
      " MAIL ORDER
*      DATA : LV_MAIL_HEAD_ERKEN(1), LV_MAIL_HEAD_TAKSIT(1).
      SELECT THSLTNO, TUTAR, PBIRIM, TTUTAR, DOCNO, ODMTHSLTNO
        FROM ZCAT_THSLT_MAIL
        INTO TABLE @DATA(LT_MAIL)
        FOR ALL ENTRIES IN @LT_HEAD
        WHERE THSLTNO EQ @LT_HEAD-THSLTNO.

      IF LT_MAIL IS NOT INITIAL.
        DELETE LT_MAIL WHERE ODMTHSLTNO EQ SPACE.

        " MAIL ORDERDAN GELEN VERIYI HEAD E ATARAK SON KONTROLU YAPIYORUZ
        SELECT THSLTNO, OGRNO,       DONEM, GTUTAR,        PBIRIM,   PROGRAMID, DOCNO,
               KIP,     PESINTAKSIT, TUR,   PROGRAM_TUTAR, KAYITTRH, KAYITSAAT, MUHASEBE
          FROM ZCAT_THSLT_HEAD
          INTO TABLE @DATA(LT_MAIL_HEAD)
          FOR ALL ENTRIES IN @LT_MAIL
          WHERE MUHASEBE  EQ 'X'
            AND PROGRAMID EQ @GS_DATA-PROGRAM_ID
            AND KIP       IN ( 6,7 )
            AND THSLTNO   EQ @LT_MAIL-ODMTHSLTNO.

        DELETE LT_MAIL_HEAD WHERE DOCNO EQ ''.
        SORT LT_MAIL_HEAD BY OGRNO ASCENDING KAYITTRH ASCENDING KAYITSAAT ASCENDING.

*        CLEAR : LV_MAIL_ODEME, LV_MAIL_ODEME_WAERS.
*        LOOP AT LT_MAIL_HEAD INTO DATA(LS_MAIL_HEAD).
*          LV_MAIL_ODEME       = LV_MAIL_ODEME + LS_MAIL_HEAD-GTUTAR.
*          LV_MAIL_ODEME_WAERS = LS_MAIL_HEAD-PBIRIM.
*        ENDLOOP.
*
*        CLEAR LS_MAIL_HEAD.
        PERFORM MAILHEAD
              USING GS_DATA-TOPLAM_UCRET
                    GS_DATA-TU_WAERS
                    LT_MAIL_HEAD
           CHANGING LV_MAIL_ODEME
                    LV_MAIL_ODEME_WAERS.

        READ TABLE LT_MAIL_HEAD INTO DATA(LS_MAIL_HEAD) INDEX 1.

        IF SY-SUBRC EQ 0.
          LS_PESIN_ERKEN-DATUM        = LS_MAIL_HEAD-KAYITTRH.
          LS_PESIN_ERKEN-UZEIT        = LS_MAIL_HEAD-KAYITSAAT.
          LS_PESIN_ERKEN-ERKEN_NORMAL = LS_MAIL_HEAD-TUR.
          LS_PESIN_ERKEN-TAKSIT_PESIN = LS_MAIL_HEAD-PESINTAKSIT.

          APPEND LS_PESIN_ERKEN TO LT_PESIN_ERKEN.
          CLEAR LS_PESIN_ERKEN.

        ENDIF.

      ENDIF.
      CLEAR : LT_MAIL_HEAD, LT_MAIL.
*&=====================================================================*
      " ÇEK ÖDEMELERÝ
*      DATA : LV_CEK_HEAD_ERKEN(1), LV_CEK_HEAD_TAKSIT(1).

      SELECT THSLTNO, PORTF, TUTAR, PBIRIM, GJAHR, IADE "ödemede cek kaydý var mý?
        FROM ZCAT_THSLT_CEK
        INTO TABLE @DATA(LT_CEK)
        FOR ALL ENTRIES IN @LT_HEAD
        WHERE IADE    EQ @SPACE
          AND PORTF   EQ 'C1'
          AND THSLTNO EQ @LT_HEAD-THSLTNO.

      IF LT_CEK IS NOT INITIAL.
*&=====================================================================*
*        " ÇEK TABLOSUNDAN GELEN VERIYI HEAD E ATARAK SON KONTROLU YAPIYORUZ
*        SELECT THSLTNO, OGRNO,       DONEM, GTUTAR,        PBIRIM,   PROGRAMID, DOCNO,
*               KIP,     PESINTAKSIT, TUR,   PROGRAM_TUTAR, KAYITTRH, KAYITSAAT, MUHASEBE
*          FROM ZCAT_THSLT_HEAD
*          INTO TABLE @DATA(LT_CEK_HEAD)
*          FOR ALL ENTRIES IN @LT_CEK
*          WHERE MUHASEBE  EQ 'X'
*            AND PROGRAMID EQ @GS_DATA-PROGRAM_ID
*            AND KIP       IN ( 6,7 )
*            AND THSLTNO   EQ @LT_CEK-THSLTNO.
*
*        DELETE LT_CEK_HEAD WHERE DOCNO EQ ''.
*
*        SORT LT_CEK_HEAD BY OGRNO ASCENDING KAYITTRH ASCENDING KAYITSAAT ASCENDING.
*
**        CLEAR : LV_CEK_ODEME, LV_CEK_ODEME_WAERS.
**        LOOP AT LT_CEK_HEAD INTO DATA(LS_CEK_HEAD).
**          LV_CEK_ODEME       = LV_CEK_ODEME + LS_CEK_HEAD-GTUTAR.
**          LV_CEK_ODEME_WAERS = LS_CEK_HEAD-PBIRIM.
**        ENDLOOP.
**        CLEAR LS_CEK_HEAD.
*
*        PERFORM CEKHEAD
*             USING GS_DATA-TOPLAM_UCRET
*                   GS_DATA-TU_WAERS
*                   LT_CEK_HEAD
*          CHANGING LV_CEK_ODEME
*                   LV_CEK_ODEME_WAERS.
*
*        READ TABLE LT_CEK_HEAD INTO DATA(LS_CEK_HEAD) INDEX 1.
*        IF SY-SUBRC EQ 0.
*          LS_PESIN_ERKEN-DATUM        = LS_CEK_HEAD-KAYITTRH.
*          LS_PESIN_ERKEN-UZEIT        = LS_CEK_HEAD-KAYITSAAT.
*          LS_PESIN_ERKEN-ERKEN_NORMAL = LS_CEK_HEAD-TUR.
*          LS_PESIN_ERKEN-TAKSIT_PESIN = LS_CEK_HEAD-PESINTAKSIT.
*
*          APPEND LS_PESIN_ERKEN TO LT_PESIN_ERKEN.
*          CLEAR LS_PESIN_ERKEN.
**          CLEAR : LV_CEK_HEAD_ERKEN, LV_CEK_HEAD_TAKSIT.
**          LV_CEK_HEAD_TAKSIT = LS_CEK_HEAD-PESINTAKSIT.
**          LV_CEK_HEAD_ERKEN  = LS_CEK_HEAD-TUR.
*        ENDIF.
*&=====================================================================*

      ENDIF.
*      CLEAR : LT_CEK_HEAD.
      CLEAR : LT_CEK.
*&=====================================================================*
      " SENET ÖDEMELERÝ
      SELECT THSLTNO, PORTF, TUTAR, PBIRIM, GJAHR, IADE
        FROM ZCAT_THSLT_SENET
        INTO TABLE @DATA(LT_SENET)
        FOR ALL ENTRIES IN @LT_HEAD
        WHERE PORTF   EQ 'S1'
          AND THSLTNO EQ @LT_HEAD-THSLTNO.
      IF LT_SENET IS NOT INITIAL.
        DELETE LT_SENET WHERE IADE EQ 'X'.

        " SENET TABLOSUNDAN GELEN VERIYI HEAD E ATARAK SON KONTROLU YAPIYORUZ
        SELECT THSLTNO, OGRNO,       DONEM, GTUTAR,        PBIRIM,   PROGRAMID, DOCNO,
               KIP,     PESINTAKSIT, TUR,   PROGRAM_TUTAR, KAYITTRH, KAYITSAAT, MUHASEBE
          FROM ZCAT_THSLT_HEAD
          INTO TABLE @DATA(LT_SENET_HEAD)
          FOR ALL ENTRIES IN @LT_SENET
          WHERE MUHASEBE  EQ 'X'
            AND PROGRAMID EQ @GS_DATA-PROGRAM_ID
            AND KIP       IN ( 6,7 )
            AND THSLTNO   EQ @LT_SENET-THSLTNO.

        DELETE LT_SENET_HEAD WHERE DOCNO EQ ''.
*        DATA : LV_SENET_HEAD_TAKSIT(1), LV_SENET_HEAD_ERKEN(1).
        SORT LT_SENET_HEAD BY OGRNO ASCENDING KAYITTRH ASCENDING KAYITSAAT ASCENDING.

*        CLEAR : LV_SENET_ODEME, LV_SENET_ODEME_WAERS.
*        LOOP AT LT_SENET_HEAD INTO DATA(LS_SENET_HEAD).
*          LV_SENET_ODEME       = LV_SENET_ODEME + LS_SENET_HEAD-GTUTAR.
*          LV_SENET_ODEME_WAERS = LS_SENET_HEAD-PBIRIM.
*        ENDLOOP.
*        CLEAR LS_SENET_HEAD.

        PERFORM SENETHEAD
             USING GS_DATA-TOPLAM_UCRET
                   GS_DATA-TU_WAERS
                   LT_SENET_HEAD
          CHANGING LV_SENET_ODEME
                   LV_SENET_ODEME_WAERS.

        READ TABLE LT_SENET_HEAD INTO DATA(LS_SENET_HEAD) INDEX 1.
        IF SY-SUBRC EQ 0.
          LS_PESIN_ERKEN-DATUM        = LS_SENET_HEAD-KAYITTRH.
          LS_PESIN_ERKEN-UZEIT        = LS_SENET_HEAD-KAYITSAAT.
          LS_PESIN_ERKEN-ERKEN_NORMAL = LS_SENET_HEAD-TUR.
          LS_PESIN_ERKEN-TAKSIT_PESIN = LS_SENET_HEAD-PESINTAKSIT.

          APPEND LS_PESIN_ERKEN TO LT_PESIN_ERKEN.
          CLEAR LS_PESIN_ERKEN.
*          CLEAR : LV_SENET_HEAD_ERKEN, LV_SENET_HEAD_TAKSIT.
*          LV_SENET_HEAD_TAKSIT = LS_SENET_HEAD-PESINTAKSIT.
*          LV_SENET_HEAD_ERKEN  = LS_SENET_HEAD-TUR.
        ENDIF.

      ENDIF.
      CLEAR : LT_SENET_HEAD, LT_SENET.
*&=====================================================================*

*&=====================================================================*
      " ZCAT_THSLT_KREDI TABLOSUNDAN GELEN VERILER
      SELECT THSLTNO, TUTAR, PBIRIM, TTUTAR
        FROM ZCAT_THSLT_KREDI
        INTO TABLE @DATA(LT_KREDI)
        FOR ALL ENTRIES IN @LT_HEAD
        WHERE THSLTNO EQ @LT_HEAD-THSLTNO.

      IF LT_KREDI IS NOT INITIAL.

        " KREDI TABLOSUNDAN GELEN VERIYI HEAD E ATARAK SON KONTROLU YAPIYORUZ
        SELECT THSLTNO, OGRNO,       DONEM, GTUTAR,        PBIRIM,   PROGRAMID, DOCNO,
               KIP,     PESINTAKSIT, TUR,   PROGRAM_TUTAR, KAYITTRH, KAYITSAAT, MUHASEBE
          FROM ZCAT_THSLT_HEAD
          INTO TABLE @DATA(LT_KREDI_HEAD)
          FOR ALL ENTRIES IN @LT_KREDI
          WHERE MUHASEBE  EQ 'X'
            AND KIP       IN ( 6,7 )
            AND PROGRAMID EQ @GS_DATA-PROGRAM_ID
            AND THSLTNO   EQ @LT_KREDI-THSLTNO.

        DELETE LT_KREDI_HEAD WHERE DOCNO EQ ''.

*        DATA : LV_KREDI_HEAD_TAKSIT(1), LV_KREDI_HEAD_ERKEN(1).
        SORT LT_KREDI_HEAD BY OGRNO ASCENDING KAYITTRH ASCENDING KAYITSAAT ASCENDING.
*
*        CLEAR : LV_KREDI_ODEME, LV_KREDI_ODEME_WAERS.
*        LOOP AT LT_KREDI_HEAD INTO DATA(LS_KREDI_HEAD).
*          LV_KREDI_ODEME       = LV_KREDI_ODEME + LS_KREDI_HEAD-GTUTAR.
*          LV_KREDI_ODEME_WAERS = LS_KREDI_HEAD-PBIRIM.
*        ENDLOOP.
*        CLEAR LS_KREDI_HEAD.
        PERFORM KREDIHEAD
             USING GS_DATA-TOPLAM_UCRET
                   GS_DATA-TU_WAERS
                   LT_KREDI_HEAD
          CHANGING LV_KREDI_ODEME
                   LV_KREDI_ODEME_WAERS.

        READ TABLE LT_KREDI_HEAD INTO DATA(LS_KREDI_HEAD) INDEX 1.
        IF SY-SUBRC EQ 0.
          LS_PESIN_ERKEN-DATUM        = LS_KREDI_HEAD-KAYITTRH.
          LS_PESIN_ERKEN-UZEIT        = LS_KREDI_HEAD-KAYITSAAT.
          LS_PESIN_ERKEN-ERKEN_NORMAL = LS_KREDI_HEAD-TUR.
          LS_PESIN_ERKEN-TAKSIT_PESIN = LS_KREDI_HEAD-PESINTAKSIT.

          APPEND LS_PESIN_ERKEN TO LT_PESIN_ERKEN.
          CLEAR LS_PESIN_ERKEN.
*          CLEAR : LV_KREDI_HEAD_ERKEN, LV_KREDI_HEAD_TAKSIT.
*          LV_KREDI_HEAD_TAKSIT = LS_KREDI_HEAD-PESINTAKSIT.
*          LV_KREDI_HEAD_ERKEN  = LS_KREDI_HEAD-TUR.
        ENDIF.
        CLEAR : LT_KREDI_HEAD, LT_KREDI.
      ENDIF.
    ENDIF.
    CLEAR : LT_HEAD.

    GS_DATA-ODEME_TUTAR = LV_KREDI_ODEME + LV_PAYU_ODEME + LV_CEK_ODEME + LV_SENET_ODEME + LV_PAYU_ODEME + LV_HAVALE_ODEME.
*    GS_dATA-OT_WAERS    = " BÜTÜN PARA BÝRÝMLERÝ HAKKINDA ????
*    GS_DATA-ODEME_TARIHI =  " BÝRDEN ÇOK ÖDEME HAKKINDA
*&=====================================================================*

    " HER TABLONDA ATILAN ÝLK KAYITLAR VE TÜRLERÝNÝ ALDIK
    DATA : LV_PESINORAN    TYPE ZCAD_PESIN,
           LV_ERKENORAN    TYPE ZCAD_ERKENKAYIT,
           LV_DONEMORAN(4).
    CLEAR : LV_PESINORAN, LV_ERKENORAN, LV_DONEMORAN.

    IF GS_DATA-GIRIS_PERSL+3(1) NE 1.
      CONCATENATE GS_DATA-GIRIS_PERSL+0(2) '1' INTO LV_DONEMORAN SEPARATED BY '-'.
    ENDIF.

    SELECT SINGLE PESIN ERKENKAYIT
          FROM ZCAT_ERK_KYT_YL
          INTO ( LV_PESINORAN, LV_ERKENORAN )
          WHERE PERSL   EQ GS_DATA-GIRIS_PERSL
            AND SCOBJID EQ GS_DATA-PROGRAM_ID.

    CLEAR LS_PESIN_ERKEN.
    SORT LT_PESIN_ERKEN BY DATUM ASCENDING UZEIT ASCENDING.
    READ TABLE LT_PESIN_ERKEN INTO LS_PESIN_ERKEN INDEX 1.

    DATA : LV_DOCAMT  TYPE CMAC_DOCAMT,
           LV_DOCCURR TYPE CMAC_DOCCURR.
    CLEAR : LV_DOCAMT,LV_DOCCURR.

    IF SY-SUBRC EQ 0.
      IF  LS_PESIN_ERKEN-TAKSIT_PESIN EQ 'Y' OR LS_PESIN_ERKEN-TAKSIT_PESIN EQ 'D'
       OR LS_PESIN_ERKEN-TAKSIT_PESIN EQ 'B' OR LS_PESIN_ERKEN-TAKSIT_PESIN EQ 'X'.
        IF LS_PESIN_ERKEN-ERKEN_NORMAL EQ 'E'.
          GS_DATA-TAKSIT_PESIN = LS_PESIN_ERKEN-TAKSIT_PESIN.
          GS_DATA-ERKEN_NORMAL = LS_PESIN_ERKEN-ERKEN_NORMAL.

          LV_DOCAMT            = GS_DATA-TOPLAM_UCRET.
          GS_DATA-TOPLAM_UCRET = LV_DOCAMT - ( LV_DOCAMT * LV_ERKENORAN / 100 ).
        ELSE.
          GS_DATA-ERKEN_NORMAL = LS_PESIN_ERKEN-ERKEN_NORMAL.
        ENDIF.
      ELSE.
        GS_DATA-TAKSIT_PESIN = LS_PESIN_ERKEN-TAKSIT_PESIN.
        GS_DATA-ERKEN_NORMAL = LS_PESIN_ERKEN-ERKEN_NORMAL.
      ENDIF.

      IF   LS_PESIN_ERKEN-TAKSIT_PESIN EQ 'D'
        OR LS_PESIN_ERKEN-TAKSIT_PESIN EQ 'P'
        OR LS_PESIN_ERKEN-TAKSIT_PESIN EQ 'Y'.
        GS_DATA-TAKSIT_PESIN = LS_PESIN_ERKEN-TAKSIT_PESIN.
        " TAMAMI PESÝN
        LV_DOCAMT            = GS_DATA-TOPLAM_UCRET.
        GS_DATA-TOPLAM_UCRET = LV_DOCAMT - ( LV_DOCAMT * LV_PESINORAN / 100 ).
        GV_BIRINCI_TAHAKKUK  = GS_DATA-TOPLAM_UCRET.
        GV_IKINCI_TAHAKKUK   = '0.00'.

      ELSEIF LS_PESIN_ERKEN-TAKSIT_PESIN EQ 'Z'
          OR LS_PESIN_ERKEN-TAKSIT_PESIN EQ 'V'
          OR LS_PESIN_ERKEN-TAKSIT_PESIN EQ 'I'.
        GS_DATA-TAKSIT_PESIN = LS_PESIN_ERKEN-TAKSIT_PESIN.
        " ÝLK PEÞÝN
        LV_DOCAMT = GS_DATA-TOPLAM_UCRET / 2 .
        GV_IKINCI_TAHAKKUK = LV_DOCAMT.
        DATA : LV_INDOR TYPE ZCAD_ERKYUZDE.
        SELECT SINGLE ILKTAKSIT INTO LV_INDOR FROM ZCAT_YL_INDR_ORN WHERE PERSL EQ GS_DATA-GIRIS_PERSL.
        GV_BIRINCI_TAHAKKUK = LV_DOCAMT - ( LV_DOCAMT * LV_INDOR / 100 ).
*        GS_DATA-TOPLAM_UCRET = LV_DOCAMT - ( LV_DOCAMT * LV_INDOR / 100 ).
      ELSE.
        GS_DATA-TAKSIT_PESIN = LS_PESIN_ERKEN-TAKSIT_PESIN.
        GS_DATA-ERKEN_NORMAL = LS_PESIN_ERKEN-ERKEN_NORMAL.

      ENDIF.

    ENDIF.
*&=====================================================================*
*    DÖNEN SONUÇLARDAN SONRA 1. ÖDEMELERÝN TUTARLARI
    GS_DATA-OT_WAERS = GS_DATA-TU_WAERS.
    GS_DATA-ODEME_TUTAR = LV_PAYU_ODEME + LV_HAVALE_ODEME + LV_MAIL_ODEME +
                          LV_CEK_ODEME  + LV_SENET_ODEME  + LV_KREDI_ODEME.
*&=====================================================================*
    "ÝKÝNCÝ TAKSÝTLER ÝÇÝN
    IF   LS_PESIN_ERKEN-TAKSIT_PESIN EQ 'Z' OR LS_PESIN_ERKEN-TAKSIT_PESIN EQ 'V'
      OR LS_PESIN_ERKEN-TAKSIT_PESIN EQ 'I' OR LS_PESIN_ERKEN-TAKSIT_PESIN EQ 'L'
      OR LS_PESIN_ERKEN-TAKSIT_PESIN EQ 'R' OR LS_PESIN_ERKEN-TAKSIT_PESIN EQ 'T'.

*&=====================================================================*
      GS_DATA-TAKSIT_PESIN = LS_PESIN_ERKEN-TAKSIT_PESIN.
      GS_DATA-ERKEN_NORMAL = LS_PESIN_ERKEN-ERKEN_NORMAL.
*&=====================================================================*
      SELECT STUDENT12, GIRIS_BELGENO, PESINODEME, PESIN_TUTAR, PARA_BIRIMI, DATUM, UZEIT, THSLT_KTARIH
        FROM ZCAT_VADE_TH_LOG
        INTO TABLE @DATA(LT_IKINCI)
        WHERE STUDENT12 EQ @GS_DATA-STUDENT12
          AND VADE_TUR  EQ 'T'.

      IF LT_IKINCI IS NOT INITIAL.
        SORT LT_IKINCI BY DATUM DESCENDING UZEIT DESCENDING.
        READ TABLE LT_IKINCI INTO DATA(LS_IKINCI_TARIH) INDEX 1.
        IF SY-SUBRC EQ 0.
          GS_DATA-ODEME_TARIHI = LS_IKINCI_TARIH-THSLT_KTARIH.
        ENDIF.
        SORT LT_IKINCI BY DATUM ASCENDING UZEIT ASCENDING.
        READ TABLE LT_IKINCI INTO DATA(LS_IKINCI) INDEX 1.
        IF SY-SUBRC EQ 0.
          " indirim hesaplamak için
          IF LS_IKINCI-PESINODEME EQ 'X'.
            " PESÝN ÝNDÝRÝMÝ YAP
            DATA : LV_IKIOR TYPE ZCAD_ERKYUZDE.
            SELECT SINGLE ILKTAKSIT INTO LV_IKIOR FROM ZCAT_YL_INDR_ORN WHERE PERSL EQ GS_DATA-GIRIS_PERSL.
            GV_IKINCI_TAHAKKUK = GV_IKINCI_TAHAKKUK - ( GV_IKINCI_TAHAKKUK * LV_IKIOR / 100 ).
            CLEAR : LV_IKIOR.
          ENDIF.

        ENDIF.
        " ÝKÝNCÝ TAKSÝTLERÝ ÝÇÝN ORANLARI AL VE HESAPLAMA YAP
        PERFORM IKINCI
           USING GS_DATA-TOPLAM_UCRET
                 GS_DATA-TU_WAERS
                 LT_IKINCI
        CHANGING LV_IKINCI_ODEME
                 LV_IKINCI_ODEME_WAERS.

        GS_DATA-IKINCI_TAKSIT = LV_IKINCI_ODEME.
        GS_DATA-IKINCI_WAERS  = LV_IKINCI_ODEME_WAERS.
        GS_DATA-ITAKSIT_INFO = 'X'.
        CLEAR : LT_IKINCI, LV_IKINCI_ODEME, LV_IKINCI_ODEME_WAERS.
      ELSE.
        GS_DATA-TOPLAM_UCRET = GV_BIRINCI_TAHAKKUK + GV_IKINCI_TAHAKKUK.
*        GS_DATA-TOPLAM_UCRET = LV_DOCAMT + GS_DATA-TOPLAM_UCRET.
      ENDIF.

    ELSE.
      SORT LT_PESIN_ERKEN BY DATUM DESCENDING UZEIT DESCENDING.
      READ TABLE LT_PESIN_ERKEN INTO DATA(LS_PEFINAL) INDEX 1.
      IF SY-SUBRC EQ 0.
        GS_DATA-ODEME_TARIHI = LS_PEFINAL-DATUM.
      ENDIF.
      GS_DATA-TOPLAM_UCRET = GV_BIRINCI_TAHAKKUK + GV_IKINCI_TAHAKKUK.
*&=====================================================================*
      GS_DATA-TAKSIT_PESIN = LS_PESIN_ERKEN-TAKSIT_PESIN.
      GS_DATA-ERKEN_NORMAL = LS_PESIN_ERKEN-ERKEN_NORMAL.
*&=====================================================================*
    ENDIF.

*&=====================================================================*
    "tahsilat
    GS_DATA-KALAN_UCRET = GS_DATA-TOPLAM_UCRET - ( GS_DATA-ODEME_TUTAR + GS_DATA-IKINCI_TAKSIT ) .
    GS_DATA-KALAN_UCRET = ABS( GS_DATA-KALAN_UCRET ).
    GS_DATA-KU_WAERS    = GS_DATA-UH_PB.
*&=====================================================================*

**    GS_DATA-ODEME_TUTAR  = LS_STUDENT-
**    GS_DATA-OT_WAERS     = LS_STUDENT-
**    GS_DATA-KALAN_UCRET  = LS_STUDENT-
**    GS_DATA-KU_WAERS     = LS_STUDENT-
**    GS_DATA-ODEME_TARIHI = LS_STUDENT-
**    GS_DATA-ERKEN_NORMAL = LS_STUDENT-

    " genel tablomuza ekliyoruz
    APPEND GS_DATA TO GT_DATA.
    CLEAR : GS_DATA,            LT_PAYU,         LT_CMAC,  LT_HEAD,       LT_HAVALE,
            LT_SENET,           LT_SENET_HEAD,   LT_KREDI, LT_KREDI_HEAD, LT_MAIL, LT_MAIL_HEAD,
            GV_IKINCI_TAHAKKUK, GV_IKINCI_WAERS, GV_BIRINCI_TAHAKKUK.
*    CLEAR : LT_CEK,  LT_CEK_HEAD.

  ENDLOOP.

ENDFORM.

*&---------------------------------------------------------------------*
*&      Form  GET_ALV
*&---------------------------------------------------------------------*
FORM GET_ALV .

  CALL FUNCTION 'REUSE_ALV_FIELDCATALOG_MERGE'
    EXPORTING
      I_PROGRAM_NAME         = SY-REPID
      I_STRUCTURE_NAME       = 'ZFI_STR_R115'
      I_INCLNAME             = SY-REPID
    CHANGING
      CT_FIELDCAT            = GT_FIELDCAT
    EXCEPTIONS
      INCONSISTENT_INTERFACE = 1
      PROGRAM_ERROR          = 2
      OTHERS                 = 3.
  IF SY-SUBRC <> 0.
    MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
            WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  ENDIF.

  PERFORM EDIT_ALV.

  GS_LAYOUT-ZEBRA             = 'X'.
  GS_LAYOUT-COLWIDTH_OPTIMIZE = 'X'.

  CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY'
    EXPORTING
      I_CALLBACK_PROGRAM = SY-REPID
      IS_LAYOUT          = GS_LAYOUT
*     IT_SORT            = GT_SORT[]
      IT_FIELDCAT        = GT_FIELDCAT
*     I_CALLBACK_TOP_OF_PAGE = 'TOP-OF-PAGE'
    TABLES
      T_OUTTAB           = GT_DATA
    EXCEPTIONS
      PROGRAM_ERROR      = 1
      OTHERS             = 2.

ENDFORM.

*&---------------------------------------------------------------------*
*&      Form  EDIT_ALV
*&---------------------------------------------------------------------*
FORM EDIT_ALV .

  LOOP AT GT_FIELDCAT INTO GS_FIELDCAT.

    IF GS_FIELDCAT-FIELDNAME EQ 'STUDENT12'.
      PERFORM FIELDCAT_TEXT USING 'Öðrenci No'.
      GS_FIELDCAT-COL_POS = 1 .
      GS_FIELDCAT-KEY     = 'X' .
    ENDIF.
*
    IF GS_FIELDCAT-FIELDNAME EQ 'FACULTY_CODE'.
      PERFORM FIELDCAT_TEXT USING 'Fakülte Kodu'.
      GS_FIELDCAT-COL_POS = 3.
    ENDIF.

    IF GS_FIELDCAT-FIELDNAME EQ 'CMSTCAT'.
      PERFORM FIELDCAT_TEXT USING 'Ücret Kategorisi'.
      GS_FIELDCAT-COL_POS  = 5.
    ENDIF.

    IF GS_FIELDCAT-FIELDNAME EQ 'UCRETHESAPLAMA'.
      PERFORM FIELDCAT_TEXT USING 'Ücret Hesaplama Tutarý'.
      GS_FIELDCAT-COL_POS  = 7.
      GS_FIELDCAT-CURRENCY = 'UH_PB'.
    ENDIF.

    IF GS_FIELDCAT-FIELDNAME EQ 'UH_PB'.
      PERFORM FIELDCAT_TEXT USING 'Ücret Hesaplama PB'.
      GS_FIELDCAT-COL_POS = 8.
    ENDIF.

    IF GS_FIELDCAT-FIELDNAME EQ 'TOPLAM_UCRET'.
      PERFORM FIELDCAT_TEXT USING 'Ýndirimli Ücret'.
      GS_FIELDCAT-COL_POS  = 9.
      GS_FIELDCAT-CURRENCY = 'TU_WAERS'.
    ENDIF.

    IF GS_FIELDCAT-FIELDNAME EQ 'TU_WAERS'.
      PERFORM FIELDCAT_TEXT USING 'Ýndirimli Ücret PB'.
      GS_FIELDCAT-COL_POS = 10.
    ENDIF.

    IF GS_FIELDCAT-FIELDNAME EQ 'ODEME_TUTAR'.
      PERFORM FIELDCAT_TEXT USING 'Ödenen Ücret'.
      GS_FIELDCAT-COL_POS  = 13.
      GS_FIELDCAT-CURRENCY = 'OT_WAERS'.
    ENDIF.

    IF GS_FIELDCAT-FIELDNAME EQ 'OT_WAERS'.
      PERFORM FIELDCAT_TEXT USING 'Ödenen Ücret PB'.
      GS_FIELDCAT-COL_POS =  14.
    ENDIF.

    IF GS_FIELDCAT-FIELDNAME EQ 'ITAKSIT_INFO'.
      PERFORM FIELDCAT_TEXT USING 'Ýkinci Taksit'.
      GS_FIELDCAT-COL_POS  = 15.
      GS_FIELDCAT-CHECKBOX = 'X'.
    ENDIF.

    IF GS_FIELDCAT-FIELDNAME EQ 'IKINCI_TAKSIT'.
      PERFORM FIELDCAT_TEXT USING 'Ýkinci Taksit Ödeme Tutarý'.
      GS_FIELDCAT-COL_POS  = 16.
      GS_FIELDCAT-CURRENCY = 'KU_WAERS'.
    ENDIF.

    IF GS_FIELDCAT-FIELDNAME EQ 'IKINCI_WAERS'.
      PERFORM FIELDCAT_TEXT USING 'ÝTOT PB'.
      GS_FIELDCAT-COL_POS = 17.
    ENDIF.

    IF GS_FIELDCAT-FIELDNAME EQ 'KALAN_UCRET'.
      PERFORM FIELDCAT_TEXT USING 'Kalan Ücret'.
      GS_FIELDCAT-COL_POS  = 19.
      GS_FIELDCAT-CURRENCY = 'KU_WAERS'.
    ENDIF.

    IF GS_FIELDCAT-FIELDNAME EQ 'KU_WAERS'.
      PERFORM FIELDCAT_TEXT USING 'Kalan Ücret Ücret PB'.
      GS_FIELDCAT-COL_POS = 20.
    ENDIF.

    IF GS_FIELDCAT-FIELDNAME EQ 'ODEME_TARIHI'.
      PERFORM FIELDCAT_TEXT USING 'Son Ödeme Yapýlan Tarih'.
      GS_FIELDCAT-COL_POS = 21.
    ENDIF.

    IF GS_FIELDCAT-FIELDNAME EQ 'KAYIT_TURU'.
      PERFORM FIELDCAT_TEXT USING 'Kayýt Türü'.
      GS_FIELDCAT-COL_POS =  23.
    ENDIF.

    IF GS_FIELDCAT-FIELDNAME EQ 'KAYIT_TURU_TANIM'.
      PERFORM FIELDCAT_TEXT USING 'Giriþ Türü Taným'.
      GS_FIELDCAT-COL_POS = 24.
      GS_FIELDCAT-OUTPUTLEN = 10.
    ENDIF.

    IF GS_FIELDCAT-FIELDNAME EQ 'KAYIT_YILI'.
      PERFORM FIELDCAT_TEXT USING 'Kayýt Yýlý'.
      GS_FIELDCAT-COL_POS = 26.
    ENDIF.

    IF GS_FIELDCAT-FIELDNAME EQ 'KAYIT_DONEM'.
      PERFORM FIELDCAT_TEXT USING 'Kayýt Dönemi'.
      GS_FIELDCAT-COL_POS = 27.
    ENDIF.

    IF GS_FIELDCAT-FIELDNAME EQ 'PROGRAM_ID'.
      PERFORM FIELDCAT_TEXT USING 'Program Objid'.
      GS_FIELDCAT-COL_POS = 28.
    ENDIF.

    IF GS_FIELDCAT-FIELDNAME EQ 'AYRIL_YIL'.
      PERFORM FIELDCAT_TEXT USING 'Ayrýldýðý Yýl'.
      GS_FIELDCAT-COL_POS = 29.
    ENDIF.

    IF GS_FIELDCAT-FIELDNAME EQ 'PROGRAM_TYPE_TXT'.
      PERFORM FIELDCAT_TEXT USING 'Program Türü'.
      GS_FIELDCAT-COL_POS   = 32.
    ENDIF.
    "taksit_epresin
    "ERKEN_NORMAL
    IF GS_FIELDCAT-FIELDNAME EQ 'PROGRAM_TYPE_TXT'.
      PERFORM FIELDCAT_TEXT USING 'Program Türü Taným'.
      GS_FIELDCAT-COL_POS   = 33.
      GS_FIELDCAT-OUTPUTLEN = 10.
    ENDIF.
    IF GS_FIELDCAT-FIELDNAME EQ 'TAKSIT_PESIN'.
      PERFORM FIELDCAT_TEXT USING 'Peþin Taksit'.
      GS_FIELDCAT-COL_POS   = 34.
    ENDIF.

    IF GS_FIELDCAT-FIELDNAME EQ 'ERKEN_NORMAL'.
      PERFORM FIELDCAT_TEXT USING 'Erken Normal'.
      GS_FIELDCAT-COL_POS   = 35.
    ENDIF.

    IF GS_FIELDCAT-FIELDNAME EQ 'FACULTY_NAME'.
      PERFORM FIELDCAT_TEXT USING 'Fakülte Adý'.
      GS_FIELDCAT-COL_POS   = 37.
      GS_FIELDCAT-OUTPUTLEN = 10.
    ENDIF.

    IF GS_FIELDCAT-FIELDNAME EQ 'PROGRAM_NAME'.
      PERFORM FIELDCAT_TEXT USING 'Program Adý'.
      GS_FIELDCAT-COL_POS   = 38.
      GS_FIELDCAT-OUTPUTLEN = 10.
    ENDIF.

*    IF GS_FIELDCAT-FIELDNAME EQ 'VAT_USD'.
*      PERFORM FIELDCAT_TEXT USING 'USD Vergi'.
*      GS_FIELDCAT-COL_POS =  12.
*      GS_FIELDCAT-CURRENCY = 'WAERS_USD'.
*    ENDIF.
*
*    IF GS_FIELDCAT-FIELDNAME EQ 'BETRH'.
*      PERFORM FIELDCAT_TEXT USING 'TRY Toplam Tutar'.
*      GS_FIELDCAT-COL_POS =  13.
*      GS_FIELDCAT-CURRENCY = 'WAERS_TRY'.
*    ENDIF.
*
*    IF GS_FIELDCAT-FIELDNAME EQ 'BETR2'.
*      PERFORM FIELDCAT_TEXT USING 'USD Toplam Tutar'.
*      GS_FIELDCAT-COL_POS =  14.
*      GS_FIELDCAT-CURRENCY = 'WAERS_USD'.
*    ENDIF.
*
*    IF GS_FIELDCAT-FIELDNAME EQ 'BUDAT'.
*      PERFORM FIELDCAT_TEXT USING 'Belge Kayýt Tarihi'.
*      GS_FIELDCAT-COL_POS = 15.
*    ENDIF.
*
*    IF GS_FIELDCAT-FIELDNAME EQ 'OPBEL'.
*      PERFORM FIELDCAT_TEXT USING 'Belge Numarasý'.
*      GS_FIELDCAT-COL_POS = 16.
*    ENDIF.
*
*    IF GS_FIELDCAT-FIELDNAME EQ 'PERSL'.
*      PERFORM FIELDCAT_TEXT USING 'Yýl Dönem'.
*      GS_FIELDCAT-COL_POS =  17  .
*    ENDIF.
*
*    IF GS_FIELDCAT-FIELDNAME EQ 'STGRPT'.
*      PERFORM FIELDCAT_TEXT USING 'Öðrenci Grubu'.
*      GS_FIELDCAT-COL_POS =  18.
*    ENDIF.
*
*    IF GS_FIELDCAT-FIELDNAME EQ 'PSOBTYPT'.
*      PERFORM FIELDCAT_TEXT USING 'Sunulan Hizmetin Nevi'.
*      GS_FIELDCAT-COL_POS =   19.
*    ENDIF.

*&=====================================================================*

    IF   GS_FIELDCAT-FIELDNAME EQ 'GIRIS_PERSL'
      OR GS_FIELDCAT-FIELDNAME EQ 'PARTNER'.
*      OR GS_FIELDCAT-FIELDNAME EQ 'WAERS_TRY'
*      OR GS_FIELDCAT-FIELDNAME EQ 'WAERS_USD'
*      OR GS_FIELDCAT-FIELDNAME EQ 'PSOBTYP'
*      OR GS_FIELDCAT-FIELDNAME EQ 'PARTNER'
*      OR GS_FIELDCAT-FIELDNAME EQ 'STOBJID'
*      OR GS_FIELDCAT-FIELDNAME EQ 'STGRP'
*      OR GS_FIELDCAT-FIELDNAME EQ 'FACULTY_ID'.

      GS_FIELDCAT-NO_OUT = 'X'.

    ENDIF.

    MODIFY GT_FIELDCAT FROM GS_FIELDCAT.

  ENDLOOP.
ENDFORM.
*&---------------------------------------------------------------------*
*&      Form  FIELDCAT_TEXT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*      -->P_0791   text
*----------------------------------------------------------------------*
FORM FIELDCAT_TEXT  USING  GV_VAR.

  GS_FIELDCAT-REPTEXT_DDIC   = GV_VAR.
  GS_FIELDCAT-SELTEXT_S      = GV_VAR.
  GS_FIELDCAT-SELTEXT_M      = GV_VAR.
  GS_FIELDCAT-SELTEXT_L      = GV_VAR.
ENDFORM.
